@page "/poke-api-test"
@using System.Text.Json
@using System.Text.Json.Serialization
@using PokeBuilderMAUI.Shared.Models

@inject HttpClient Client

<h1>CHOOSE YOUR POKEMON!!!!!!</h1>

@if (getPokmon){

    <p>Loading Pokemon #@currentIndex</p>
}

<ul @onloadend=OnInitializedAsync>
    @foreach (var pokemon in currentPokemon)
    {
        <li>
            @pokemon.Name
        </li>
    }

</ul>


@code {
    private List<Pokemon>? currentPokemon = [];
    private int currentIndex = 1;
    private bool getPokmon = true;
    protected override async Task OnInitializedAsync()
    {
        
        string name;


        while (getPokmon)
        {
            try
            {
                // data == get JSON object from requested URL

                var data = await Client.GetFromJsonAsync<JsonElement>($"{Client.BaseAddress}/{currentIndex}");


                //currentPokemon = await Client.GetFromJsonAsync<Pokemon[]>($"{Client.BaseAddress}/{currentIndex}");

                //Set the string property above to the "name" property in the JSON object
                name = data.GetProperty("name").ToString();


                Pokemon pokemon = new Pokemon(name, Models.Type.GRASS, Models.Type.GRASS, "cool", new string[4], 20, 20, 20, 20, 20, 20, "cool");
                currentPokemon.Add(pokemon);
                //currentPokemon.ElementAt(currentIndex - 1).Name = name;

                //primary = Enum.TryParse((data.GetProperty("types[0].type.name").ToString().ToUpper());
                currentIndex++;
                await InvokeAsync(StateHasChanged);
            }
            catch(Exception notFound)
            {
                getPokmon = false;
                await InvokeAsync(StateHasChanged);
            }
        }
        
       

    }
}
